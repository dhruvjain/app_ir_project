Discriminative Training and Maximum Entropy Models for Statistical
Machine Translation
Franz Josef Och and Hermann Ney
Lehrstuhl fu?r Informatik VI, Computer Science Department
RWTH Aachen - University of Technology
D-52056 Aachen, Germany
{och,ney}@informatik.rwth-aachen.de
Abstract
We present a framework for statistical
machine translation of natural languages
based on direct maximum entropy mod-
els, which contains the widely used sour-
ce-channel approach as a special case. All
knowledge sources are treated as feature
functions, which depend on the source
language sentence, the target language
sentence and possible hidden variables.
This approach allows a baseline machine
translation system to be extended easily by
adding new feature functions. We show
that a baseline statistical machine transla-
tion system is significantly improved us-
ing this approach.
1 Introduction
We are given a source (?French?) sentence fJ1 =
f1, . . . , fj , . . . , fJ , which is to be translated into a
target (?English?) sentence eI1 = e1, . . . , ei, . . . , eI .
Among all possible target sentences, we will choose
the sentence with the highest probability:1
e?I1 = argmax
eI1
{Pr(eI1|fJ1 )} (1)
The argmax operation denotes the search problem,
i.e. the generation of the output sentence in the target
language.
1The notational convention will be as follows. We use the
symbol Pr(?) to denote general probability distributions with
(nearly) no specific assumptions. In contrast, for model-based
probability distributions, we use the generic symbol p(?).
1.1 Source-Channel Model
According to Bayes? decision rule, we can equiva-
lently to Eq. 1 perform the following maximization:
e?I1 = argmax
eI1
{Pr(eI1) ? Pr(fJ1 |eI1)} (2)
This approach is referred to as source-channel ap-
proach to statistical MT. Sometimes, it is also re-
ferred to as the ?fundamental equation of statisti-
cal MT? (Brown et al, 1993). Here, Pr(eI1) is
the language model of the target language, whereas
Pr(fJ1 |eI1) is the translation model. Typically, Eq. 2
is favored over the direct translation model of Eq. 1
with the argument that it yields a modular approach.
Instead of modeling one probability distribution,
we obtain two different knowledge sources that are
trained independently.
The overall architecture of the source-channel ap-
proach is summarized in Figure 1. In general, as
shown in this figure, there may be additional trans-
formations to make the translation task simpler for
the algorithm. Typically, training is performed by
applying a maximum likelihood approach. If the
language model Pr(eI1) = p?(eI1) depends on pa-
rameters ? and the translation model Pr(fJ1 |eI1) =
p?(fJ1 |eI1) depends on parameters ?, then the opti-
mal parameter values are obtained by maximizing
the likelihood on a parallel training corpus fS1 , eS1
(Brown et al, 1993):
?? = argmax
?
S?
s=1
p?(fs|es) (3)
?? = argmax
?
S?
s=1
p?(es) (4)
                Computational Linguistics (ACL), Philadelphia, July 2002, pp. 295-302.
                         Proceedings of the 40th Annual Meeting of the Association for
Source
Language Text
??
Preprocessing
Pr(eI1): Language Modeloo
Global Search
e?I1 = argmax
eI1
{Pr(eI1) ? Pr(fJ1 |eI1)}
??
??
Pr(fJ1 |eI1): Translation Modeloo
Postprocessing
??
Target
Language Text
Figure 1: Architecture of the translation approach based on source-channel models.
We obtain the following decision rule:
e?I1 = argmax
eI1
{p??(eI1) ? p??(fJ1 |eI1)} (5)
State-of-the-art statistical MT systems are based on
this approach. Yet, the use of this decision rule has
various problems:
1. The combination of the language model p??(eI1)
and the translation model p??(fJ1 |eI1) as shown
in Eq. 5 can only be shown to be optimal if the
true probability distributions p??(eI1) = Pr(eI1)
and p??(fJ1 |eI1) = Pr(fJ1 |eI1) are used. Yet,
we know that the used models and training
methods provide only poor approximations of
the true probability distributions. Therefore, a
different combination of language model and
translation model might yield better results.
2. There is no straightforward way to extend a
baseline statistical MT model by including ad-
ditional dependencies.
3. Often, we observe that comparable results are
obtained by using the following decision rule
instead of Eq. 5 (Och et al, 1999):
e?I1 = argmax
eI1
{p??(eI1) ? p??(eI1|fJ1 )} (6)
Here, we replaced p??(fJ1 |eI1) by p??(eI1|fJ1 ).
From a theoretical framework of the source-
channel approach, this approach is hard to jus-
tify. Yet, if both decision rules yield the same
translation quality, we can use that decision
rule which is better suited for efficient search.
1.2 Direct Maximum Entropy Translation
Model
As alternative to the source-channel approach, we
directly model the posterior probability Pr(eI1|fJ1 ).
An especially well-founded framework for doing
this is maximum entropy (Berger et al, 1996). In
this framework, we have a set of M feature func-
tions hm(eI1, fJ1 ),m = 1, . . . ,M . For each feature
function, there exists a model parameter ?m,m =
1, . . . ,M . The direct translation probability is given
Source
Language Text
??
Preprocessing
?? ?1 ? h1(eI1, fJ1 )oo
Global Search
argmax
eI1
{ M?
m=1
?mhm(eI1, fJ1 )
}
??
?2 ? h2(eI1, fJ1 )oo
. . .oo
Postprocessing
??
Target
Language Text
Figure 2: Architecture of the translation approach based on direct maximum entropy models.
by:
Pr(eI1|fJ1 ) = p?M1 (e
I
1|fJ1 ) (7)
= exp[
?M
m=1 ?mhm(eI1, fJ1 )]?
e?I1 exp[
?M
m=1 ?mhm(e?I1, fJ1 )]
(8)
This approach has been suggested by (Papineni et
al., 1997; Papineni et al, 1998) for a natural lan-
guage understanding task.
We obtain the following decision rule:
e?I1 = argmax
eI1
{
Pr(eI1|fJ1 )
}
= argmax
eI1
{ M?
m=1
?mhm(eI1, fJ1 )
}
Hence, the time-consuming renormalization in Eq. 8
is not needed in search. The overall architecture of
the direct maximum entropy models is summarized
in Figure 2.
Interestingly, this framework contains as special
case the source channel approach (Eq. 5) if we use
the following two feature functions:
h1(eI1, fJ1 ) = log p??(eI1) (9)
h2(eI1, fJ1 ) = log p??(fJ1 |eI1) (10)
and set ?1 = ?2 = 1. Optimizing the corresponding
parameters ?1 and ?2 of the model in Eq. 8 is equiv-
alent to the optimization of model scaling factors,
which is a standard approach in other areas such as
speech recognition or pattern recognition.
The use of an ?inverted? translation model in the
unconventional decision rule of Eq. 6 results if we
use the feature function logPr(eI1|fJ1 ) instead of
logPr(fJ1 |eI1). In this framework, this feature can
be as good as logPr(fJ1 |eI1). It has to be empirically
verified, which of the two features yields better re-
sults. We even can use both features logPr(eI1|fJ1 )
and logPr(fJ1 |eI1), obtaining a more symmetric
translation model.
As training criterion, we use the maximum class
posterior probability criterion:
??M1 = argmax
?M1
{ S?
s=1
log p?M1 (es|fs)
}
(11)
This corresponds to maximizing the equivocation
or maximizing the likelihood of the direct transla-
tion model. This direct optimization of the poste-
rior probability in Bayes decision rule is referred to
as discriminative training (Ney, 1995) because we
directly take into account the overlap in the proba-
bility distributions. The optimization problem has
one global optimum and the optimization criterion
is convex.
1.3 Alignment Models and Maximum
Approximation
Typically, the probability Pr(fJ1 |eI1) is decomposed
via additional hidden variables. In statistical align-
ment models Pr(fJ1 , aJ1 |eI1), the alignment aJ1 is in-
troduced as a hidden variable:
Pr(fJ1 |eI1) =
?
aJ1
Pr(fJ1 , aJ1 |eI1)
The alignment mapping is j ? i = aj from source
position j to target position i = aj .
Search is performed using the so-called maximum
approximation:
e?I1 = argmax
eI1
?
?
?Pr(e
I
1) ?
?
aJ1
Pr(fJ1 , aJ1 |eI1)
?
?
?
? argmax
eI1
{
Pr(eI1) ?maxaJ1
Pr(fJ1 , aJ1 |eI1)
}
Hence, the search space consists of the set of all pos-
sible target language sentences eI1 and all possible
alignments aJ1 .
Generalizing this approach to direct translation
models, we extend the feature functions to in-
clude the dependence on the additional hidden vari-
able. Using M feature functions of the form
hm(eI1, fJ1 , aJ1 ),m = 1, . . . ,M , we obtain the fol-
lowing model:
Pr(eI1, aJ1 |fJ1 ) =
=
exp
(?M
m=1 ?mhm(eI1, fJ1 , aJ1 )
)
?
e?I1,a?J1 exp
(?M
m=1 ?mhm(e?I1, fJ1 , a?J1 )
)
Obviously, we can perform the same step for transla-
tion models with an even richer structure of hidden
variables than only the alignment aJ1 . To simplify
the notation, we shall omit in the following the de-
pendence on the hidden variables of the model.
2 Alignment Templates
As specific MT method, we use the alignment tem-
plate approach (Och et al, 1999). The key elements
of this approach are the alignment templates, which
are pairs of source and target language phrases to-
gether with an alignment between the words within
the phrases. The advantage of the alignment tem-
plate approach compared to single word-based sta-
tistical translation models is that word context and
local changes in word order are explicitly consid-
ered.
The alignment template model refines the transla-
tion probability Pr(fJ1 |eI1) by introducing two hid-
den variables zK1 and aK1 for the K alignment tem-
plates and the alignment of the alignment templates:
Pr(fJ1 |eI1) =
?
zK1 ,aK1
Pr(aK1 |eI1) ?
Pr(zK1 |aK1 , eI1) ? Pr(fJ1 |zK1 , aK1 , eI1)
Hence, we obtain three different probability
distributions: Pr(aK1 |eI1), Pr(zK1 |aK1 , eI1) and
Pr(fJ1 |zK1 , aK1 , eI1). Here, we omit a detailed de-
scription of modeling, training and search, as this is
not relevant for the subsequent exposition. For fur-
ther details, see (Och et al, 1999).
To use these three component models in a direct
maximum entropy approach, we define three dif-
ferent feature functions for each component of the
translation model instead of one feature function for
the whole translation model p(fJ1 |eI1). The feature
functions have then not only a dependence on fJ1
and eI1 but also on zK1 , aK1 .
3 Feature functions
So far, we use the logarithm of the components of
a translation model as feature functions. This is a
very convenient approach to improve the quality of
a baseline system. Yet, we are not limited to train
only model scaling factors, but we have many possi-
bilities:
? We could add a sentence length feature:
h(fJ1 , eI1) = I
This corresponds to a word penalty for each
produced target word.
? We could use additional language models by
using features of the following form:
h(fJ1 , eI1) = h(eI1)
? We could use a feature that counts how many
entries of a conventional lexicon co-occur in
the given sentence pair. Therefore, the weight
for the provided conventional dictionary can be
learned. The intuition is that the conventional
dictionary is expected to be more reliable than
the automatically trained lexicon and therefore
should get a larger weight.
? We could use lexical features, which fire if a
certain lexical relationship (f, e) occurs:
h(fJ1 , eI1) =
?
?
J?
j=1
?(f, fj)
?
? ?
( I?
i=1
?(e, ei)
)
? We could use grammatical features that relate
certain grammatical dependencies of source
and target language. For example, using a func-
tion k(?) that counts how many verb groups ex-
ist in the source or the target sentence, we can
define the following feature, which is 1 if each
of the two sentences contains the same number
of verb groups:
h(fJ1 , eI1) = ?(k(fJ1 ), k(eI1)) (12)
In the same way, we can introduce semantic
features or pragmatic features such as the di-
alogue act classification.
We can use numerous additional features that deal
with specific problems of the baseline statistical MT
system. In this paper, we shall use the first three of
these features. As additional language model, we
use a class-based five-gram language model. This
feature and the word penalty feature allow a straight-
forward integration into the used dynamic program-
ming search algorithm (Och et al, 1999). As this is
not possible for the conventional dictionary feature,
we use n-best rescoring for this feature.
4 Training
To train the model parameters ?M1 of the direct trans-
lation model according to Eq. 11, we use the GIS
(Generalized Iterative Scaling) algorithm (Darroch
and Ratcliff, 1972). It should be noted that, as
was already shown by (Darroch and Ratcliff, 1972),
by applying suitable transformations, the GIS algo-
rithm is able to handle any type of real-valued fea-
tures. To apply this algorithm, we have to solve var-
ious practical problems.
The renormalization needed in Eq. 8 requires a
sum over a large number of possible sentences,
for which we do not know an efficient algorithm.
Hence, we approximate this sum by sampling the
space of all possible sentences by a large set of
highly probable sentences. The set of considered
sentences is computed by an appropriately extended
version of the used search algorithm (Och et al,
1999) computing an approximate n-best list of trans-
lations.
Unlike automatic speech recognition, we do not
have one reference sentence, but there exists a num-
ber of reference sentences. Yet, the criterion as it
is described in Eq. 11 allows for only one reference
translation. Hence, we change the criterion to al-
low Rs reference translations es,1, . . . , es,Rs for the
sentence es:
??M1 = argmax
?M1
{ S?
s=1
1
Rs
Rs?
r=1
log p?M1 (es,r|fs)
}
We use this optimization criterion instead of the op-
timization criterion shown in Eq. 11.
In addition, we might have the problem that no
single of the reference translations is part of the n-
best list because the search algorithm performs prun-
ing, which in principle limits the possible transla-
tions that can be produced given a certain input sen-
tence. To solve this problem, we define for max-
imum entropy training each sentence as reference
translation that has the minimal number of word er-
rors with respect to any of the reference translations.
5 Results
We present results on the VERBMOBIL task, which
is a speech translation task in the domain of appoint-
ment scheduling, travel planning, and hotel reser-
vation (Wahlster, 1993). Table 1 shows the cor-
pus statistics of this task. We use a training cor-
pus, which is used to train the alignment template
model and the language models, a development cor-
pus, which is used to estimate the model scaling fac-
tors, and a test corpus.
Table 1: Characteristics of training corpus (Train),
manual lexicon (Lex), development corpus (Dev),
test corpus (Test).
German English
Train Sentences 58 073
Words 519 523 549 921
Singletons 3 453 1 698
Vocabulary 7 939 4 672
Lex Entries 12 779
Ext. Vocab. 11 501 6 867
Dev Sentences 276
Words 3 159 3 438
PP (trigr. LM) - 28.1
Test Sentences 251
Words 2 628 2 871
PP (trigr. LM) - 30.5
So far, in machine translation research does not
exist one generally accepted criterion for the evalu-
ation of the experimental results. Therefore, we use
a large variety of different criteria and show that the
obtained results improve on most or all of these cri-
teria. In all experiments, we use the following six
error criteria:
? SER (sentence error rate): The SER is com-
puted as the number of times that the generated
sentence corresponds exactly to one of the ref-
erence translations used for the maximum en-
tropy training.
? WER (word error rate): The WER is computed
as the minimum number of substitution, inser-
tion and deletion operations that have to be per-
formed to convert the generated sentence into
the target sentence.
? PER (position-independent WER): A short-
coming of the WER is the fact that it requires
a perfect word order. The word order of an
acceptable sentence can be different from that
of the target sentence, so that the WER mea-
sure alone could be misleading. To overcome
this problem, we introduce as additional mea-
sure the position-independent word error rate
(PER). This measure compares the words in the
two sentences ignoring the word order.
? mWER (multi-reference word error rate): For
each test sentence, there is not only used a sin-
gle reference translation, as for the WER, but
a whole set of reference translations. For each
translation hypothesis, the edit distance to the
most similar sentence is calculated (Nie?en et
al., 2000).
? BLEU score: This score measures the precision
of unigrams, bigrams, trigrams and fourgrams
with respect to a whole set of reference trans-
lations with a penalty for too short sentences
(Papineni et al, 2001). Unlike all other eval-
uation criteria used here, BLEU measures ac-
curacy, i.e. the opposite of error rate. Hence,
large BLEU scores are better.
? SSER (subjective sentence error rate): For a
more detailed analysis, subjective judgments
by test persons are necessary. Each trans-
lated sentence was judged by a human exam-
iner according to an error scale from 0.0 to 1.0
(Nie?en et al, 2000).
? IER (information item error rate): The test sen-
tences are segmented into information items.
For each of them, if the intended information
is conveyed and there are no syntactic errors,
the sentence is counted as correct (Nie?en et
al., 2000).
In the following, we present the results of this ap-
proach. Table 2 shows the results if we use a direct
translation model (Eq. 6).
As baseline features, we use a normal word tri-
gram language model and the three component mod-
els of the alignment templates. The first row shows
the results using only the four baseline features with
?1 = ? ? ? = ?4 = 1. The second row shows the
result if we train the model scaling factors. We see a
systematic improvement on all error rates. The fol-
lowing three rows show the results if we add the
word penalty, an additional class-based five-gram
Table 2: Effect of maximum entropy training for alignment template approach (WP: word penalty feature,
CLM: class-based language model (five-gram), MX: conventional dictionary).
objective criteria [%] subjective criteria [%]
SER WER PER mWER BLEU SSER IER
Baseline(?m = 1) 86.9 42.8 33.0 37.7 43.9 35.9 39.0
ME 81.7 40.2 28.7 34.6 49.7 32.5 34.8
ME+WP 80.5 38.6 26.9 32.4 54.1 29.9 32.2
ME+WP+CLM 78.1 38.3 26.9 32.1 55.0 29.1 30.9
ME+WP+CLM+MX 77.8 38.4 26.8 31.9 55.2 28.8 30.9
0.74
0.76
0.78
0.8
0.82
0.84
0.86
0.88
0.9
0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000
se
nte
nc
e e
rro
r ra
te 
(SE
R)
 
number of iterations
MEME+WPME+WP+CLMME+WP+CLM+MX
Figure 3: Test error rate over the iterations of the
GIS algorithm for maximum entropy training of
alignment templates.
language model and the conventional dictionary fea-
tures. We observe improved error rates for using the
word penalty and the class-based language model as
additional features.
Figure 3 show how the sentence error rate (SER)
on the test corpus improves during the iterations of
the GIS algorithm. We see that the sentence error
rates converges after about 4000 iterations. We do
not observe significant overfitting.
Table 3 shows the resulting normalized model
scaling factors. Multiplying each model scaling fac-
tor by a constant positive value does not affect the
decision rule. We see that adding new features also
has an effect on the other model scaling factors.
6 Related Work
The use of direct maximum entropy translation mod-
els for statistical machine translation has been sug-
Table 3: Resulting model scaling factors of maxi-
mum entropy training for alignment templates; ?1:
trigram language model; ?2: alignment template
model, ?3: lexicon model, ?4: alignment model
(normalized such that ?4m=1 ?m = 4).
ME +WP +CLM +MX
?1 0.86 0.98 0.75 0.77
?2 2.33 2.05 2.24 2.24
?3 0.58 0.72 0.79 0.75
?4 0.22 0.25 0.23 0.24
WP ? 2.6 3.03 2.78
CLM ? ? 0.33 0.34
MX ? ? ? 2.92
gested by (Papineni et al, 1997; Papineni et al,
1998). They train models for natural language un-
derstanding rather than natural language translation.
In contrast to their approach, we include a depen-
dence on the hidden variable of the translation model
in the direct translation model. Therefore, we are
able to use statistical alignment models, which have
been shown to be a very powerful component for
statistical machine translation systems.
In speech recognition, training the parameters of
the acoustic model by optimizing the (average) mu-
tual information and conditional entropy as they are
defined in information theory is a standard approach
(Bahl et al, 1986; Ney, 1995). Combining various
probabilistic models for speech and language mod-
eling has been suggested in (Beyerlein, 1997; Peters
and Klakow, 1999).
7 Conclusions
We have presented a framework for statistical MT
for natural languages, which is more general than the
widely used source-channel approach. It allows a
baseline MT system to be extended easily by adding
new feature functions. We have shown that a base-
line statistical MT system can be significantly im-
proved using this framework.
There are two possible interpretations for a statis-
tical MT system structured according to the source-
channel approach, hence including a model for
Pr(eI1) and a model for Pr(fJ1 |eI1). We can inter-
pret it as an approximation to the Bayes decision rule
in Eq. 2 or as an instance of a direct maximum en-
tropy model with feature functions logPr(eI1) and
logPr(fJ1 |eI1). As soon as we want to use model
scaling factors, we can only do this in a theoretically
justified way using the second interpretation. Yet,
the main advantage comes from the large number of
additional possibilities that we obtain by using the
second interpretation.
An important open problem of this approach is
the handling of complex features in search. An in-
teresting question is to come up with features that
allow an efficient handling using conventional dy-
namic programming search algorithms.
In addition, it might be promising to optimize the
parameters directly with respect to the error rate of
the MT system as is suggested in the field of pattern
and speech recognition (Juang et al, 1995; Schlu?ter
and Ney, 2001).
References
L. R. Bahl, P. F. Brown, P. V. de Souza, and R. L. Mer-
cer. 1986. Maximum mutual information estimation
of hidden markov model parameters. In Proc. Int.
Conf. on Acoustics, Speech, and Signal Processing,
pages 49?52, Tokyo, Japan, April.
A. L. Berger, S. A. Della Pietra, and V. J. Della
Pietra. 1996. A maximum entropy approach to nat-
ural language processing. Computational Linguistics,
22(1):39?72, March.
P. Beyerlein. 1997. Discriminative model combina-
tion. In Proc. of the IEEE Workshop on Automatic
Speech Recognition and Understanding, pages 238?
245, Santa Barbara, CA, December.
P. F. Brown, S. A. Della Pietra, V. J. Della Pietra, and
R. L. Mercer. 1993. The mathematics of statistical
machine translation: Parameter estimation. Computa-
tional Linguistics, 19(2):263?311.
J. N. Darroch and D. Ratcliff. 1972. Generalized itera-
tive scaling for log-linear models. Annals of Mathe-
matical Statistics, 43:1470?1480.
B. H. Juang, W. Chou, and C. H. Lee. 1995. Statisti-
cal and discriminative methods for speech recognition.
In A. J. R. Ayuso and J. M. L. Soler, editors, Speech
Recognition and Coding - New Advances and Trends.
Springer Verlag, Berlin, Germany.
H. Ney. 1995. On the probabilistic-interpretation of
neural-network classifiers and discriminative training
criteria. IEEE Trans. on Pattern Analysis and Machine
Intelligence, 17(2):107?119, February.
S. Nie?en, F. J. Och, G. Leusch, and H. Ney. 2000.
An evaluation tool for machine translation: Fast eval-
uation for MT research. In Proc. of the Second Int.
Conf. on Language Resources and Evaluation (LREC),
pages 39?45, Athens, Greece, May.
F. J. Och, C. Tillmann, and H. Ney. 1999. Improved
alignment models for statistical machine translation.
In Proc. of the Joint SIGDAT Conf. on Empirical Meth-
ods in Natural Language Processing and Very Large
Corpora, pages 20?28, University of Maryland, Col-
lege Park, MD, June.
K. A. Papineni, S. Roukos, and R. T. Ward. 1997.
Feature-based language understanding. In European
Conf. on Speech Communication and Technology,
pages 1435?1438, Rhodes, Greece, September.
K. A. Papineni, S. Roukos, and R. T. Ward. 1998. Max-
imum likelihood and discriminative training of direct
translation models. In Proc. Int. Conf. on Acoustics,
Speech, and Signal Processing, pages 189?192, Seat-
tle, WA, May.
K. A. Papineni, S. Roukos, T. Ward, and W.-J. Zhu. 2001.
Bleu: a method for automatic evaluation of machine
translation. Technical Report RC22176 (W0109-022),
IBM Research Division, Thomas J. Watson Research
Center, Yorktown Heights, NY, September.
J. Peters and D. Klakow. 1999. Compact maximum en-
tropy language models. In Proc. of the IEEE Workshop
on Automatic Speech Recognition and Understanding,
Keystone, CO, December.
R. Schlu?ter and H. Ney. 2001. Model-based MCE bound
to the true Bayes? error. IEEE Signal Processing Let-
ters, 8(5):131?133, May.
W. Wahlster. 1993. Verbmobil: Translation of face-to-
face dialogs. In Proc. of MT Summit IV, pages 127?
135, Kobe, Japan, July.
